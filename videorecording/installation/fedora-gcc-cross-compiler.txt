Video Script:
1. Why we need a cross Compiler
2. WSL Ubuntu 20.04.6 LTS


*********************************************************************************************
GCC CROSS COMPILER WSL Fedora
*********************************************************************************************

1. Install Ubuntu 20.04 LTS
2. Update Packages 
    sudo yum update --assumeyes
    sudo yum upgrade --assumeyes
4. Install gcc 
    sudo yum install gcc --assumeyes
    sudo yum install gcc gcc-c++ --assumeyes
5. Install git 
    sudo yum install git --assumeyes
6. Create src folder in $HOME directory. All commands to be executed within src folder
    cd $HOME
    mkdir src
    cd src
7. Install gdb (Optional)
    a. https://ftp.gnu.org/gnu/gdb/
    b. Download 14.2
    curl "https://ftp.gnu.org/gnu/gdb/gdb-14.2.tar.gz" --output gdb-14.2.tar.gz
    tar -xvzf gdb-14.2.tar.gz
8. Install binutils 
    a. https://ftp.gnu.org/gnu/binutils/
    b. Download 2.42
    curl "https://ftp.gnu.org/gnu/binutils/binutils-2.42.tar.gz" --output binutils-2.42.tar.gz
    tar -xvzf binutils-2.42.tar.gz
9. Download gcc source code
    a. git clone git://gcc.gnu.org/git/gcc.git gcc-13.2 (takes long time)
    b. OR https://ftp.gnu.org/gnu/gcc/
    curl "https://ftp.gnu.org/gnu/gcc/gcc-13.2.0/gcc-13.2.0.tar.gz" --output gcc-13.2.0.tar.gz
    tar -xvzf gcc-13.2.0.tar.gz
10. OSDEV Cross Compiler (https://wiki.osdev.org/GCC_Cross-Compiler)
    sudo yum install bison --assumeyes
    sudo yum install flex --assumeyes
    sudo yum install gmp-devel --assumeyes
    sudo yum install libmpc-devel --assumeyes
    sudo yum install mpfr-devel --assumeyes
    sudo yum install texinfo --assumeyes
    sudo yum install isl-devel --assumeyes
11. VARIABLES
    export PREFIX="$HOME/opt/cross"
    export TARGET=i686-elf
    export PATH="$PREFIX/bin:$PATH"
12. binutils
    cd $HOME/src
    mkdir build-binutils
    cd build-binutils
    ../binutils-2.42/configure --target=$TARGET --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror
    make
    make install
13. gdb
    ../gdb-14.2/configure --target=$TARGET --prefix="$PREFIX" --disable-werror
    make all-gdb
    make install-gdb
14. GCC
    cd $HOME/src
    # The $PREFIX/bin dir _must_ be in the PATH. We did that above.
    which -- $TARGET-as || echo $TARGET-as is not in the PATH
    mkdir build-gcc
    cd build-gcc
    ../gcc-13.2.0/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --enable-languages=c,c++ --without-headers
    make all-gcc
    make all-target-libgcc
    make install-gcc
    make install-target-libgcc

*********************************************************************************************
ALL COMMANDS
*********************************************************************************************

sudo yum update --assumeyes 
sudo yum upgrade --assumeyes

sudo yum install gcc --assumeyes
sudo yum install gcc gcc-c++ --assumeyes

cd $HOME
mkdir src
cd src

curl "https://ftp.gnu.org/gnu/gdb/gdb-14.2.tar.gz" --output gdb-14.2.tar.gz
tar -xvzf gdb-14.2.tar.gz
curl "https://ftp.gnu.org/gnu/binutils/binutils-2.42.tar.gz" --output binutils-2.42.tar.gz
tar -xvzf binutils-2.42.tar.gz
curl "https://ftp.gnu.org/gnu/gcc/gcc-13.2.0/gcc-13.2.0.tar.gz" --output gcc-13.2.0.tar.gz
tar -xvzf gcc-13.2.0.tar.gz

sudo yum install bison --assumeyes
sudo yum install flex --assumeyes
sudo yum install gmp-devel --assumeyes
sudo yum install libmpc-devel --assumeyes
sudo yum install mpfr-devel --assumeyes
sudo yum install texinfo --assumeyes
sudo yum install isl-devel --assumeyes

export PREFIX="$HOME/opt/cross"
export TARGET=i686-elf
export PATH="$PREFIX/bin:$PATH"

cd $HOME/src
mkdir build-binutils
cd build-binutils
../binutils-2.42/configure --target=$TARGET --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror
make
make install

../gdb-14.2/configure --target=$TARGET --prefix="$PREFIX" --disable-werror
make all-gdb
make install-gdb

cd $HOME/src
# The $PREFIX/bin dir _must_ be in the PATH. We did that above.
which -- $TARGET-as || echo $TARGET-as is not in the PATH
mkdir build-gcc
cd build-gcc
../gcc-13.2.0/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --enable-languages=c,c++ --without-headers
make all-gcc
make all-target-libgcc
make install-gcc
make install-target-libgcc