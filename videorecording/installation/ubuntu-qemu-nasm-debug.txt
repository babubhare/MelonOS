1. Install ubuntu-qemu-nasm.sh
2. Download the files from github
    git clone git@github.com:babubhare/MelonOS.git
3. Goto folder MelonOS/firstCCode
4. ./build.sh
5. Run qemu up command 
    qemu-system-x86_64 -hda ./bin/os.bin -S -gdb tcp:127.0.0.1:1234 -nographic
    qemu-system-x86_64 -hda ./boot_char.bin -nographic
    ndisasm
6. Open another prompt; connect to fedora
    gdb
    target remote tcp:127.0.0.1:1234
    add-symbol-file ./build/kernelfull.o 0x0100000
    break _start
    break kernel_main
    c "continue"
    info registers
    frame
    n (next)
    cntrl c
    disas 0x0100000, 0x0100fff
    layout asm
    
KILL Qemu in nographics:
1. Opened new terminal session
2. Used ps to find PID of previous tty: ps -fu
3. Killed previous tty: kill -HUP PID
4. Contrl + a ; x
5. xxd for hex and binary viewer (xxd -b file or xxd file)


DisAssembler:
Let's look at the code:

004520F4 55             push ebp      
004520F5 8BEC           mov ebp, esp  
004520F7 6A00           push $00      
004520F9 53             push ebx      
004520FA 33D2           xor edx,edx

Each line here represent a single machine instruction. The information presented is as follows:
The first column is the address at which the instruction starts, displayed in hex.
The second column is the machine code for the instruction, displayed in hex.
The third column is the instruction disassembled to assembler language.
So the second and third columns represent the exact same information. The third column is provided to make the code more understandable.